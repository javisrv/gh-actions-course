name: 13 - Using Caching

on:
  workflow_dispatch:
    inputs:
      use-cache:
        description: 'Whether to execute cache step'
        type: boolean
        default: true
      python-version:
        description: 'Python version'
        type: choice
        options:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
        default: '3.9'

jobs:
  install-deps:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 13-caching/react-app
    outputs:
      deps-cache-key: ${{ steps.cache-key.outputs.CACHE_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Calculate cache key
        id: cache-key
        run: echo "CACHE_KEY=python-deps-${{ hashFiles('**/requirements.txt') }}" >> "$GITHUB_OUTPUT"

      - name: Restore Python Dependencies Cache
        uses: actions/cache@v3
        if: ${{ inputs.use-cache }}
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ steps.cache-key.outputs.CACHE_KEY }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python install_dependencies.py

  lint-test:
    runs-on: ubuntu-latest
    needs: install-deps
    defaults:
      run:
        working-directory: 13-caching/react-app
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Restore Python Dependencies Cache
        uses: actions/cache@v3
        if: ${{ inputs.use-cache }}
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ needs.install-deps.outputs.deps-cache-key }} 

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python install_dependencies.py

      - name: Run Tests
        run: python run_tests.py

      - name: Linting
        run: echo "Linting..."

      - name: Deploy to Nonprod
        run: python deploy.py
  
  build:
    runs-on: ubuntu-latest
    needs: install-deps
    defaults:
      run:
        working-directory: 13-caching/react-app
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version }}

      - name: Restore Python Dependencies Cache
        uses: actions/cache@v3
        if: ${{ inputs.use-cache }}
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ needs.install-deps.outputs.deps-cache-key }} 

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: python install_dependencies.py

      - name: Build Application
        run: python build_app.py




        # 1. Checkout the code
        # 2. Install dependencies
        # 3. Linting, formatting, unit testing, building
        # 4. Deploy to a nonprod environment